
CREATE OR REPLACE procedure add_artist_country(
    artist_id in number,
    country_id in number
) as

begin
    insert into w_artistCountry VALUES
    (artist_id, country_id);
    dbms_output.put_line('Artist country saved');
end add_artist_country;


CREATE OR REPLACE procedure delete_artist_country(
    artist_id in number,
    country_id in number
) as

begin
    delete from W_ARTISTCOUNTRY where
    ARTISTID = artist_id and countryid = country_id;
    DBMS_OUTPUT.PUT_LINE('Artist country deleted' /*IN VARCHAR2*/);
end delete_artist_country;






CREATE OR REPLACE PROCEDURE NEW_CONCERT(
    CONCERT_ID IN NUMBER,
    VENUENAME_N IN VARCHAR2,
    STREETADDRESS_N VARCHAR2,
    CITY_N IN VARCHAR2,
    COUNTRYID_N IN NUMBER,
    CAPACITY_N IN NUMBER,
    TICKETPRICE_N IN NUMBER,
    CONCERTDATE_N IN DATE,
    STATUS_N IN VARCHAR
) AS
BEGIN
    INSERT INTO W_CONCERT VALUES (
        CONCERT_ID,
        VENUENAME_N,
        STREETADDRESS_N,
        CITY_N,
        COUNTRYID_N,
        CAPACITY_N,
        TICKETPRICE_N,
        CONCERTDATE_N,
        STATUS_N 
    );

    DBMS_OUTPUT.PUT_LINE('CONCERT SAVED SUCCESSFULLY');
END NEW_CONCERT;


CREATE OR REPLACE PROCEDURE UPDATE_CONCERT(
    CONCERT_ID IN NUMBER,
    VENUE_NAME IN VARCHAR2,
    VENUE_STREET_ADDRESS IN VARCHAR2,
    VENUE_CITY IN VARCHAR2,
    COUNTRY_ID IN NUMBER,
    VENUE_CAPACITY IN NUMBER,
    TICKET_PRICE IN NUMBER,
    CONCERT_DATE IN DATE,
    CONCERT_STATUS IN VARCHAR2) AS
    
BEGIN
    UPDATE W_CONCERT
        SET VENUENAME = VENUE_NAME,
                STREETADDRESS = VENUE_STREET_ADDRESS,
                CITY = VENUE_CITY,
                COUNTRYID = COUNTRY_ID,
                CAPACITY = VENUE_CAPACITY,
                TICKETPRICE = TICKET_PRICE,
                CONCERTDATE = CONCERT_DATE,
                STATUS = CONCERT_STATUS
                WHERE CONCERTID=CONCERT_ID;
	DBMS_OUTPUT.PUT_LINE('CONCERT UPDATED SUCCESSFULLY');

END UPDATE_CONCERT;




CREATE OR REPLACE PROCEDURE NEW_STAGE
(
    STAGE_ID IN NUMBER,
    STAGE_NAME IN VARCHAR2,
    CONCERT_ID IN NUMBER)
    
    AS       
        BEGIN
            INSERT INTO W_STAGE VALUES (STAGE_ID,STAGE_NAME,CONCERT_ID);
            DBMS_OUTPUT.PUT_LINE('STAGE SAVED SUCCESSFULLY');
END NEW_STAGE;

CREATE OR REPLACE PROCEDURE DELETE_STAGE(
    STAGE_ID IN NUMBER
    
    ) AS
    
    BEGIN
        DELETE FROM W_STAGE WHERE STAGEID = STAGE_ID;
        DBMS_OUTPUT.PUT_LINE('STAGE DELETED SUCCESSFULLY');
END DELETE_STAGE;







CREATE OR REPLACE PROCEDURE ADD_STAGE_GENRE(
    STAGE_ID IN NUMBER,
    GENRE_ID IN NUMBER
) AS

BEGIN

  INSERT INTO W_STAGEGENRE VALUES(STAGE_ID, GENRE_ID);

    DBMS_OUTPUT.PUT_LINE('STAGE''S GENRE SAVED SUCCESSFYLLY');

END ADD_STAGE_GENRE;

CREATE OR REPLACE PROCEDURE DELETE_STAGE_GENRE(
    STAGE_ID IN NUMBER,
    GENRE_ID IN NUMBER
) AS

BEGIN

   DELETE FROM W_STAGEGENRE WHERE STAGEID = STAGE_ID
                AND GENREID = GENRE_ID;

    DBMS_OUTPUT.PUT_LINE('STAGE''S GENRE DELETED SUCCESSFYLLY');

END DELETE_STAGE_GENRE;

